{"ast":null,"code":"var _jsxFileName = \"/home/umaid/finalProject/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport CartContext from './Cart-Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const esistingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - esistingItem.price;\n    let updatedItems;\n    if (esistingItem.amout === 1) {\n      updatedItems = state.item.filter(item => item.id !== action.id);\n    } else {\n      const updateditem = {\n        ...esistingItem,\n        amount: esistingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updateditem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatch] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatch({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatch({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"MsdoMJO/MZ1PHjpfw1tYsPTi8Ik=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","esistingItem","amout","filter","updateditem","CartProvider","props","cartState","dispatch","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/home/umaid/finalProject/src/store/CartProvider.js"],"sourcesContent":["import React,{useReducer} from 'react'\r\nimport CartContext from './Cart-Context'\r\n \r\nconst defaultCartState={\r\n    items:[],\r\n    totalAmount:0\r\n}\r\n\r\nconst cartReducer=(state,action)=>\r\n{\r\n    if(action.type==='ADD')\r\n    {\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\r\n      \r\n      const existingCartItemIndex=state.items.findIndex(item => item.id === action.item.id)\r\n      const existingCartItem=state.items[existingCartItemIndex];\r\n      \r\n      let updatedItems;\r\n\r\n      if(existingCartItem){\r\n     const updatedItem={\r\n        ...existingCartItem,\r\n        amount:existingCartItem.amount + action.item.amount\r\n      };\r\n      updatedItems=[...state.items]\r\n      updatedItems[existingCartItemIndex]=updatedItem\r\n    }\r\n    else\r\n    {\r\n        \r\n        updatedItems=state.items.concat(action.item)\r\n    }\r\n\r\n      \r\n      return{\r\n        items:updatedItems,\r\n        totalAmount:updatedTotalAmount\r\n      }\r\n    }\r\n    if(action.type==='REMOVE')\r\n    {\r\n       \r\n       const existingCartItemIndex=state.items.findIndex(item=>item.id===action.id)\r\n       const esistingItem=state.items[existingCartItemIndex]\r\n       const updatedTotalAmount = state.totalAmount - esistingItem.price \r\n       let updatedItems;\r\n       if(esistingItem.amout=== 1)\r\n       {\r\n        updatedItems=state.item.filter(item=>item.id !==action.id)\r\n       }\r\n       else{\r\n        const updateditem={...esistingItem,amount:esistingItem.amount -1}\r\n        updatedItems=[...state.items];\r\n        updatedItems[existingCartItemIndex]=updateditem\r\n       }\r\n       return{\r\n        items:updatedItems,\r\n        totalAmount:updatedTotalAmount\r\n       }\r\n    }\r\n return defaultCartState\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n   const[cartState,dispatch]= useReducer(cartReducer,defaultCartState)\r\n\r\n    const addItemToCartHandler=(item)=>\r\n    {\r\n       dispatch({type:'ADD',item:item})\r\n    }\r\n    const removeItemFromCartHandler=(id)=>\r\n    {\r\n      dispatch({type:'REMOVE',id:id})\r\n    }\r\n const cartContext= {\r\n    items:cartState.items,\r\n    totalAmount:cartState.totalAmount,\r\n    addItem:addItemToCartHandler,\r\n    removeItem:removeItemFromCartHandler\r\n }\r\n  return (\r\n    \r\n   \r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n \r\n  )\r\n}\r\n\r\nexport default CartProvider"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,UAAU,QAAO,OAAO;AACtC,OAAOC,WAAW,MAAM,gBAAgB;AAAA;AAExC,MAAMC,gBAAgB,GAAC;EACnBC,KAAK,EAAC,EAAE;EACRC,WAAW,EAAC;AAChB,CAAC;AAED,MAAMC,WAAW,GAAC,CAACC,KAAK,EAACC,MAAM,KAC/B;EACI,IAAGA,MAAM,CAACC,IAAI,KAAG,KAAK,EACtB;IACI,MAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;IAEvF,MAAMC,qBAAqB,GAACP,KAAK,CAACH,KAAK,CAACW,SAAS,CAACJ,IAAI,IAAIA,IAAI,CAACK,EAAE,KAAKR,MAAM,CAACG,IAAI,CAACK,EAAE,CAAC;IACrF,MAAMC,gBAAgB,GAACV,KAAK,CAACH,KAAK,CAACU,qBAAqB,CAAC;IAEzD,IAAII,YAAY;IAEhB,IAAGD,gBAAgB,EAAC;MACrB,MAAME,WAAW,GAAC;QACf,GAAGF,gBAAgB;QACnBJ,MAAM,EAACI,gBAAgB,CAACJ,MAAM,GAAGL,MAAM,CAACG,IAAI,CAACE;MAC/C,CAAC;MACDK,YAAY,GAAC,CAAC,GAAGX,KAAK,CAACH,KAAK,CAAC;MAC7Bc,YAAY,CAACJ,qBAAqB,CAAC,GAACK,WAAW;IACjD,CAAC,MAED;MAEID,YAAY,GAACX,KAAK,CAACH,KAAK,CAACgB,MAAM,CAACZ,MAAM,CAACG,IAAI,CAAC;IAChD;IAGE,OAAM;MACJP,KAAK,EAACc,YAAY;MAClBb,WAAW,EAACK;IACd,CAAC;EACH;EACA,IAAGF,MAAM,CAACC,IAAI,KAAG,QAAQ,EACzB;IAEG,MAAMK,qBAAqB,GAACP,KAAK,CAACH,KAAK,CAACW,SAAS,CAACJ,IAAI,IAAEA,IAAI,CAACK,EAAE,KAAGR,MAAM,CAACQ,EAAE,CAAC;IAC5E,MAAMK,YAAY,GAACd,KAAK,CAACH,KAAK,CAACU,qBAAqB,CAAC;IACrD,MAAMJ,kBAAkB,GAAGH,KAAK,CAACF,WAAW,GAAGgB,YAAY,CAACT,KAAK;IACjE,IAAIM,YAAY;IAChB,IAAGG,YAAY,CAACC,KAAK,KAAI,CAAC,EAC1B;MACCJ,YAAY,GAACX,KAAK,CAACI,IAAI,CAACY,MAAM,CAACZ,IAAI,IAAEA,IAAI,CAACK,EAAE,KAAIR,MAAM,CAACQ,EAAE,CAAC;IAC3D,CAAC,MACG;MACH,MAAMQ,WAAW,GAAC;QAAC,GAAGH,YAAY;QAACR,MAAM,EAACQ,YAAY,CAACR,MAAM,GAAE;MAAC,CAAC;MACjEK,YAAY,GAAC,CAAC,GAAGX,KAAK,CAACH,KAAK,CAAC;MAC7Bc,YAAY,CAACJ,qBAAqB,CAAC,GAACU,WAAW;IAChD;IACA,OAAM;MACLpB,KAAK,EAACc,YAAY;MAClBb,WAAW,EAACK;IACb,CAAC;EACJ;EACH,OAAOP,gBAAgB;AACxB,CAAC;AAED,MAAMsB,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAK,CAACC,SAAS,EAACC,QAAQ,CAAC,GAAE3B,UAAU,CAACK,WAAW,EAACH,gBAAgB,CAAC;EAElE,MAAM0B,oBAAoB,GAAElB,IAAI,IAChC;IACGiB,QAAQ,CAAC;MAACnB,IAAI,EAAC,KAAK;MAACE,IAAI,EAACA;IAAI,CAAC,CAAC;EACnC,CAAC;EACD,MAAMmB,yBAAyB,GAAEd,EAAE,IACnC;IACEY,QAAQ,CAAC;MAACnB,IAAI,EAAC,QAAQ;MAACO,EAAE,EAACA;IAAE,CAAC,CAAC;EACjC,CAAC;EACJ,MAAMe,WAAW,GAAE;IAChB3B,KAAK,EAACuB,SAAS,CAACvB,KAAK;IACrBC,WAAW,EAACsB,SAAS,CAACtB,WAAW;IACjC2B,OAAO,EAACH,oBAAoB;IAC5BI,UAAU,EAACH;EACd,CAAC;EACA,oBAGM,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,UACpCL,KAAK,CAACQ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACI;AAG/B,CAAC;AAAA,GAzBKT,YAAY;AAAA,KAAZA,YAAY;AA2BlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}